# Theme
run-shell ~/.config/tmux/nord/nord.tmux
set -g pane-border-style fg=colour8
set -g pane-active-border-style fg=colour12
set -g message-style bg=black,fg=colour4
set -g mode-style bg=colour1,fg=color0
set -g copy-mode-match-style bg=colour1,fg=color0

# General Settings
set -g automatic-rename off
set -g base-index 1
set -g default-terminal 'xterm-kitty'
set -g display-time 4000
set -g history-limit 50000
set -g main-pane-width 93
set -g mode-keys vi
set -g mouse on
set -g pane-base-index 1
set -g pane-border-format ' #P#{?pane_synchronized,#[fg=red] ━━━━[SYNC]━━━━,} '
set -g pane-border-lines heavy
set -g pane-border-status top
set -g prefix C-Space
set -g renumber-windows on
set -g status on
set -g status-position top

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Nord overrides
set -g window-status-format "#[fg=black,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#I #[fg=white,bg=brightblack,nobold,noitalics,nounderscore] #[fg=white,bg=brightblack]#W #[fg=brightblack,bg=black,nobold,noitalics,nounderscore]"
set -g window-status-current-format "#[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#I #[fg=black,bg=cyan,nobold,noitalics,nounderscore] #[fg=black,bg=cyan]#W #[fg=cyan,bg=black,nobold,noitalics,nounderscore]"

# Used when you want to conditionally bind based on current program
tmuxpasskey='fish -c tmuxpasskey'

# Bindings
bind-key s split-window -v -c "#{pane_current_path}"
bind-key v split-window -h -c "#{pane_current_path}" \; \
           select-layout main-vertical
bind-key ? list-keys
bind-key C-b command-prompt
bind-key C-k send-keys C-k
bind-key C-l send-keys C-l
bind-key C-z send-keys C-z
bind-key C-n command-prompt -p "New:" "new-window -n '%%'"
bind-key Space select-layout main-vertical
bind-key Tab choose-tree -s
bind-key a set-window-option synchronize-panes
bind-key r source-file ~/.config/tmux/tmux.conf

bind-key -n C-j if "$tmuxpasskey" "send-keys C-j" "select-pane -D"
bind-key -n C-k if "$tmuxpasskey" "send-keys C-k" "select-pane -U"
bind-key -n C-l if "$tmuxpasskey" "send-keys C-l" "select-pane -R"

bind-key -n C-q if "$tmuxpasskey" "send-keys C-q" "copy-mode"

bind-key -n C-z resize-pane -Z

bind-key -r h resize-pane -L 10
bind-key -r j resize-pane -D 10
bind-key -r k resize-pane -U 10
bind-key -r l resize-pane -R 10
bind-key -r H resize-pane -L
bind-key -r J resize-pane -D
bind-key -r K resize-pane -U
bind-key -r L resize-pane -R

bind-key -n M-n run 'fish -c tmuxnew'
bind-key -n M-r command-prompt -I "#W" -p "Rename:" "rename-window -- '%%'"
bind-key -n M-1 if-shell "tmux select-window -t 1" "" "new-window -n New"
bind-key -n M-2 if-shell "tmux select-window -t 2" "" "new-window -n New"
bind-key -n M-3 if-shell "tmux select-window -t 3" "" "new-window -n New"
bind-key -n M-4 if-shell "tmux select-window -t 4" "" "new-window -n New"
bind-key -n M-5 if-shell "tmux select-window -t 5" "" "new-window -n New"

bind-key -n F1 select-pane -t 1                           # Ctrl+1
bind-key -n F2 select-pane -t 2                           # Ctrl+2
bind-key -n F3 select-pane -t 3                           # Ctrl+3
bind-key -n F4 select-pane -t 4                           # Ctrl+4
bind-key -n F5 select-pane -t 5                           # Ctrl+5
bind-key -n F7 command-prompt                             # Ctrl+.
bind-key -n F10 select-window -T                          # Ctrl+Tab
bind-key -n F11 split-window -v -c "#{pane_current_path}" # Ctrl+Enter
# Shift+Enter
bind-key -n F12 split-window -h -c "#{pane_current_path}" \; \
                select-layout main-vertical
# Ctrl+'
bind-key -n F8 copy-mode\; \
  command-prompt -i -p "Search:" "send -X search-backward-incremental \"%%%\""

# bind-key -n F6 display-message F6 # Ctrl+<BS> - Used in neovim
# bind-key -n F9 display-message F9 # Ctrl+;    - Used in neovim

bind-key C-u copy-mode\; send -X halfpage-up
bind-key C-Space copy-mode
bind-key C-s copy-mode\; send ?
bind-key C-[ copy-mode
bind-key C-MouseDrag1Pane if-shell -F -t = "#{mouse_any_flag}" "if -Ft= \"#{pane_in_mode}\" \"copy-mode -M\" \"send-keys -M\"" "copy-mode -M"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "pbcopy"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"

bind-key -n WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind-key -n WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"

bind-key / \
  copy-mode\; \
  command-prompt -i -p "Search:" "send -X search-backward-incremental \"%%%\""

bind-key -T copy-mode-vi p \
  send -X copy-selection-and-cancel\; \
  paste-buffer

bind-key -T copy-mode-vi K \
  send -X cursor-up\; \
  send -X select-line\; \
  send -X cursor-left

bind-key -T copy-mode-vi J \
  send -X cursor-down\; \
  send -X select-line\; \
  send -X cursor-left

bind-key \. \
  copy-mode\; \
  send -X cursor-up\; \
  send -X cursor-up\; \
  send -X select-line\; \
  send -X cursor-left\; \
  send -X copy-selection-and-cancel\; \
  paste-buffer

bind-key -n M-a \
  copy-mode \; \
  send -X cursor-left\; \
  send -X begin-selection\; \
  send -X jump-backward "❯"\; \
  send -X cursor-right\; \
  send -X cursor-right
